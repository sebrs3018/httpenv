---
# template source: https://github.com/bretfisher/docker-build-workflow/blob/main/templates/call-docker-build.yaml
name: Docker Build

on:
  push:
    branches:
      - main
    # don't rebuild image if someone only edited unrelated files
    paths-ignore:
      - "README.md"
      - ".github/linters/**"
  pull_request:
    # don't rebuild image if someone only edited unrelated files
    paths-ignore:
      - "README.md"
      - ".github/linters/**"
  schedule:
    # re-run montly to keep image fresh with upstream base images
    - cron: "0 12 15 * *"
  workflow_dispatch:
    # run manually from Actions tab

# jobs:
#   call-docker-build:

#     name: Call Docker Build

#     uses: bretfisher/docker-build-workflow/.github/workflows/reusable-docker-build.yaml@main

#     permissions:
#       contents: read
#       packages: write # needed to push docker image to ghcr.io
#       pull-requests: write # needed to create and update comments in PRs

#     secrets:

#       # Only needed if with:dockerhub-enable is true below
#       # https://hub.docker.com/settings/security
#       dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
#       dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}

#     with:

#       ### REQUIRED
#       ### ENABLE ONE OR BOTH REGISTRIES
#       ### tell docker where to push.
#       ### NOTE if Docker Hub is set to true, you must set secrets above and also add account/repo/tags below
#       dockerhub-enable: true
#       ghcr-enable: true

#       ### A list of the account/repo names for docker build. List should match what's enabled above
#       ### defaults to:
#       # image-names: |
#       #   ${{ github.repository }}
#       #   ghcr.io/${{ github.repository }}

#       ### set rules for tagging images, based on special action syntax:
#       ### https://github.com/docker/metadata-action#tags-input
#       ### defaults to:
#       #tag-rules: |
#       #  type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
#       #  type=raw,value=stable-{{date 'YYYYMMDDHHmmss'}},enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
#       #  type=ref,event=pr
#       #  type=ref,event=branch
#       #  type=raw,value=gha-${{ github.run_id }}

#       ### path to where docker should copy files into image
#       ### defaults to root of repository (.)
#       # context: .

#       ### Dockerfile alternate name. Default is Dockerfile (relative to context path)
#       # file: Containerfile

#       ### build stage to target, defaults to empty, which builds to last stage in Dockerfile
#       # target:

#       ### platforms to build for
#       ### defaults to linux/amd64
#       ### other options: linux/amd64,linux/arm64,linux/arm/v7
#       platforms: linux/amd64,linux/arm64

#       ### Create a PR comment with image tags and labels
#       ### defaults to true
#       # comment-enable: false

jobs:
  docker-login:
    name: Docker login and build
    runs-on: ubuntu-latest

    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read

    steps:
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Metadata action
        uses: docker/metadata-action@v5.5.1
        id: docker_meta
        with:
          images: sebrs3018/playground
          flavor: |
            latest=false
          tags: |
            type=raw,value=07
          #  type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
          #  type=ref,event=pr
          #  type=ref,event=branch
          #  type=semver,pattern={{version}}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.6.1
        with:
          push: false
          load: true
          tags: ${{ github.run_id }}
          #labels: ${{ steps.docker_meta.outputs.labels }}
          #Cache capabilities granted by docker buildx
          cache-from: type=gha
          cache-to: type=gha,mode=max
          #Platforms distribution granted bu QEMU
          platforms: linux/amd64

      - name: Aqua Security Trivy (not blocking)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ github.run_id }}
          exit-code: 0 # exit code 0 means no vulnerabilities found => this id done in order to prevent blocking the build initially
          format: table

      - name: Run Trivy for HIGH,CRITICAL CVEs and report (blocking)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ github.run_id }}
          exit-code: 1
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "HIGH,CRITICAL"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
